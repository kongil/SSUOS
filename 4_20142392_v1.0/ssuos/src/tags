!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AFLAGS	kernel/Makefile	/^AFLAGS = -f elf32$/;"	m
ARENA_MAGIC	kernel/mem/malloc.c	46;"	d	file:
ASSERT	kernel/arch/interrupt.c	31;"	d	file:
ASSERT	kernel/bitmap.c	12;"	d	file:
ASSERT	kernel/include/debug.h	18;"	d
ASSERT	kernel/include/debug.h	22;"	d
ASSERT	kernel/include/debug.h	28;"	d
ASSERT	kernel/list.c	4;"	d	file:
ASSERT	kernel/synch.c	7;"	d	file:
AUTHOR	kernel/arch/Main.c	/^const char* AUTHOR = "OSLAB";$/;"	v
AUTHOR	kernel/build/Main.s	/^AUTHOR:$/;"	l
Activate_A20Gate	boot/i386/boot1.asm	/^Activate_A20Gate:$/;"	l
Address	kernel/arch/interrupt.c	/^	unsigned long Address;$/;"	m	struct:_IDTR	file:
BITMAP_ERROR	kernel/include/bitmap.h	26;"	d
BITMASK	kernel/include/vaddr.h	15;"	d
BLOCK_CNT	kernel/include/device/block.h	/^    BLOCK_CNT                    \/* Number of Pintos block types. *\/$/;"	e	enum:block_type
BLOCK_FILESYS	kernel/include/device/block.h	/^    BLOCK_FILESYS,               \/* File system. *\/$/;"	e	enum:block_type
BLOCK_FOREIGN	kernel/include/device/block.h	/^    BLOCK_FOREIGN,               \/* Owned by non-Pintos operating system. *\/$/;"	e	enum:block_type
BLOCK_KERNEL	kernel/include/device/block.h	/^    BLOCK_KERNEL,                \/* Pintos OS kernel. *\/$/;"	e	enum:block_type
BLOCK_RAW	kernel/include/device/block.h	/^    BLOCK_RAW = BLOCK_ROLE_CNT,  \/* "Raw" device with unidentified contents. *\/$/;"	e	enum:block_type
BLOCK_ROLE_CNT	kernel/include/device/block.h	/^    BLOCK_ROLE_CNT,$/;"	e	enum:block_type
BLOCK_SCRATCH	kernel/include/device/block.h	/^    BLOCK_SCRATCH,               \/* Scratch. *\/$/;"	e	enum:block_type
BLOCK_SECTOR_SIZE	kernel/include/device/block.h	11;"	d
BLOCK_SWAP	kernel/include/device/block.h	/^    BLOCK_SWAP,                  \/* Swap. *\/$/;"	e	enum:block_type
BOOL	kernel/include/type.h	/^typedef char BOOL;$/;"	t
BOOT1_LOAD	boot/i386/bootloader.asm	/^BOOT1_LOAD:$/;"	l
BUFSIZ	kernel/include/ssulib.h	7;"	d
BUILD_COMMAND	kernel/Makefile	/^BUILD_COMMAND = -o $(BUILD_PATH)\/$@$/;"	m
BUILD_PATH	kernel/Makefile	/^BUILD_PATH = .\/build$/;"	m
BYTE	kernel/include/type.h	/^typedef unsigned char BYTE;$/;"	t
CARRIAGE_RETURN	boot/i386/boot1.asm	/^CARRIAGE_RETURN:$/;"	l
CC	kernel/Makefile	/^CC = gcc$/;"	m
CFLAGS	kernel/Makefile	/^CFLAGS = -O0 -g -I.\/include -ffreestanding -m32 -nostdlib -nostdinc -static -fno-stack-protector$/;"	m
CHAR	kernel/include/device/console.h	/^} CHAR;$/;"	t	typeref:struct:kChStruct
CHAR_BIT	kernel/include/limits.h	4;"	d
CHAR_MAX	kernel/include/limits.h	12;"	d
CHAR_MAX	kernel/include/limits.h	15;"	d
CHAR_MIN	kernel/include/limits.h	11;"	d
CHAR_MIN	kernel/include/limits.h	14;"	d
CHECK_LINE_STATUS	boot/i386/boot1.asm	/^CHECK_LINE_STATUS:$/;"	l
CLS	boot/i386/boot1.asm	/^CLS:$/;"	l
CODEDESCRIPTOR	boot/i386/boot1.asm	/^		CODEDESCRIPTOR  equ 0x08$/;"	d
CODE_SEGMENT	kernel/include/interrupt.h	11;"	d
COMMON_COMMAND	kernel/Makefile	/^COMMON_COMMAND = $(BUILD_COMMAND) -c $^ $(CFLAGS)$/;"	m
CR0_FLAG_PE	kernel/include/mem/paging.h	8;"	d
CR0_FLAG_PG	kernel/include/mem/paging.h	7;"	d
CapslockFlag	kernel/include/device/kbd.h	/^	BOOL CapslockFlag;$/;"	m	struct:Key_Status_Struct
CodeSelector	kernel/arch/interrupt.c	/^	unsigned short CodeSelector;$/;"	m	struct:_ID	file:
ConvertScancodeToASCII	kernel/device/kbd.c	/^BOOL ConvertScancodeToASCII(BYTE Scancode, BYTE *Asciicode)$/;"	f
DATADESCRIPTOR	boot/i386/boot1.asm	/^		DATADESCRIPTOR  equ 0x10$/;"	d
DEVICES_BLOCK_H	kernel/include/device/block.h	2;"	d
DEVICES_PARTITION_H	kernel/include/device/partition.h	2;"	d
DIR	kernel/Makefile	/^DIR := ${CURDIR}$/;"	m
DIV_ROUND_UP	kernel/include/round.h	6;"	d
ELEM_BITS	kernel/bitmap.c	26;"	d	file:
ENTRY	kernel/Makefile	/^ENTRY = ssuos_main$/;"	m
ENTRY32	boot/i386/boot1.asm	/^ENTRY32:$/;"	l
ExtentedFlag	kernel/include/device/kbd.h	/^	BOOL ExtentedFlag;$/;"	m	struct:Key_Status_Struct
FALSE	kernel/include/type.h	13;"	d
FIRST_SPORT	kernel/device/console.c	17;"	d	file:
FLAG_IF	kernel/arch/interrupt.c	128;"	d	file:
FLAG_MBS	kernel/arch/interrupt.c	127;"	d	file:
GDT	boot/i386/boot1.asm	/^GDT:$/;"	l
GDT_DESC	boot/i386/boot1.asm	/^GDT_DESC:$/;"	l
GDT_END	boot/i386/boot1.asm	/^GDT_END:$/;"	l
Glob_x	kernel/include/device/console.h	/^int Glob_x;$/;"	v
Glob_y	kernel/include/device/console.h	/^int Glob_y;$/;"	v
HLT	kernel/include/interrupt.h	4;"	d
HSCREEN	kernel/device/console.c	9;"	d	file:
HighOffset	kernel/arch/interrupt.c	/^	unsigned short HighOffset;$/;"	m	struct:_ID	file:
IDT	boot/i386/boot1.asm	/^IDT  equ    0x40000$/;"	d
IDTDESCRIPTOR	boot/i386/boot1.asm	/^		IDTDESCRIPTOR	equ 0x20$/;"	d
IDTR	boot/i386/boot1.asm	/^IDTR:$/;"	l
IDT_IGNORE	boot/i386/boot1.asm	/^IDT_IGNORE:$/;"	l
IDT_LOOP	boot/i386/boot1.asm	/^IDT_LOOP:$/;"	l
INT16_MAX	kernel/include/stdint.h	9;"	d
INT16_MAX	kernel/include/type.h	34;"	d
INT16_MIN	kernel/include/stdint.h	10;"	d
INT16_MIN	kernel/include/type.h	35;"	d
INT32_MAX	kernel/include/stdint.h	13;"	d
INT32_MAX	kernel/include/type.h	38;"	d
INT32_MIN	kernel/include/stdint.h	14;"	d
INT32_MIN	kernel/include/type.h	39;"	d
INT64_MAX	kernel/include/stdint.h	17;"	d
INT64_MAX	kernel/include/type.h	42;"	d
INT64_MIN	kernel/include/stdint.h	18;"	d
INT64_MIN	kernel/include/type.h	43;"	d
INT8_MAX	kernel/include/stdint.h	5;"	d
INT8_MAX	kernel/include/type.h	30;"	d
INT8_MIN	kernel/include/stdint.h	6;"	d
INT8_MIN	kernel/include/type.h	31;"	d
INTMAX_MAX	kernel/include/stdint.h	41;"	d
INTMAX_MAX	kernel/include/type.h	66;"	d
INTMAX_MIN	kernel/include/stdint.h	40;"	d
INTMAX_MIN	kernel/include/type.h	65;"	d
INTPTR_MAX	kernel/include/stdint.h	34;"	d
INTPTR_MAX	kernel/include/type.h	59;"	d
INTPTR_MIN	kernel/include/stdint.h	33;"	d
INTPTR_MIN	kernel/include/type.h	58;"	d
INTR_MAX	kernel/include/interrupt.h	8;"	d
INTR_MAX	kernel/include/intr-stubs.h	4;"	d
INTR_OFF	kernel/include/interrupt.h	/^	INTR_OFF,$/;"	e	enum:intr_level
INTR_ON	kernel/include/interrupt.h	/^	INTR_ON $/;"	e	enum:intr_level
INT_MAX	kernel/include/limits.h	22;"	d
INT_MIN	kernel/include/limits.h	23;"	d
IO_BASE	kernel/device/console.c	16;"	d	file:
ISR_IGNORE	boot/i386/boot1.asm	/^ISR_IGNORE:$/;"	l
Initialize_PIC	boot/i386/boot1.asm	/^Initialize_PIC:$/;"	l
Initialize_Serial_port	boot/i386/boot1.asm	/^Initialize_Serial_port:$/;"	l
KBDMAPSIZE	kernel/include/device/kbd.h	7;"	d
KERNEL_ADDR	kernel/include/mem/paging.h	34;"	d
KERNEL_HEAP	kernel/include/mem/paging.h	35;"	d
KERNEL_LOAD	boot/i386/bootloader.asm	/^KERNEL_LOAD:$/;"	l
KER_SIZ	boot/i386/bootloader.asm	/^KER_SIZ		equ		0x80$/;"	d
KEY_BSPACE	kernel/include/device/kbd.h	27;"	d
KEY_CAPS	kernel/include/device/kbd.h	14;"	d
KEY_ESC	kernel/include/device/kbd.h	9;"	d
KEY_F1	kernel/include/device/kbd.h	15;"	d
KEY_F10	kernel/include/device/kbd.h	24;"	d
KEY_F11	kernel/include/device/kbd.h	25;"	d
KEY_F12	kernel/include/device/kbd.h	26;"	d
KEY_F2	kernel/include/device/kbd.h	16;"	d
KEY_F3	kernel/include/device/kbd.h	17;"	d
KEY_F4	kernel/include/device/kbd.h	18;"	d
KEY_F5	kernel/include/device/kbd.h	19;"	d
KEY_F6	kernel/include/device/kbd.h	20;"	d
KEY_F7	kernel/include/device/kbd.h	21;"	d
KEY_F8	kernel/include/device/kbd.h	22;"	d
KEY_F9	kernel/include/device/kbd.h	23;"	d
KEY_LALT	kernel/include/device/kbd.h	12;"	d
KEY_PRTSCN	kernel/include/device/kbd.h	11;"	d
KEY_RSHIFT	kernel/include/device/kbd.h	10;"	d
KEY_SPACE	kernel/include/device/kbd.h	13;"	d
KEY_TAB	kernel/include/device/kbd.h	28;"	d
KStat	kernel/device/kbd.c	/^static Key_Status KStat;$/;"	v	file:
Kbd_Map	kernel/device/kbd.c	/^static BYTE Kbd_Map[4][KBDMAPSIZE] = {$/;"	v	file:
Key_Status	kernel/include/device/kbd.h	/^} Key_Status;$/;"	t	typeref:struct:Key_Status_Struct
Key_Status_Struct	kernel/include/device/kbd.h	/^typedef struct Key_Status_Struct {$/;"	s
LEFT	kernel/vsprintk.c	7;"	d	file:
LINE_FEED	boot/i386/boot1.asm	/^LINE_FEED:$/;"	l
LINE_STATUS	kernel/device/console.c	18;"	d	file:
LIST_INITIALIZER	kernel/include/list.h	121;"	d
LLONG_MAX	kernel/include/limits.h	30;"	d
LLONG_MIN	kernel/include/limits.h	31;"	d
LOADER_ARGS	kernel/include/loader.h	13;"	d
LOADER_ARGS_LEN	kernel/include/loader.h	18;"	d
LOADER_ARG_CNT	kernel/include/loader.h	14;"	d
LOADER_ARG_CNT_LEN	kernel/include/loader.h	19;"	d
LOADER_BASE	kernel/include/loader.h	4;"	d
LOADER_END	kernel/include/loader.h	5;"	d
LOADER_KERN_BASE	kernel/include/loader.h	7;"	d
LOADER_PARTS	kernel/include/loader.h	12;"	d
LOADER_PARTS_LEN	kernel/include/loader.h	17;"	d
LOADER_PHYS_BASE	kernel/include/loader.h	9;"	d
LOADER_SIG	kernel/include/loader.h	11;"	d
LOADER_SIG_LEN	kernel/include/loader.h	16;"	d
LONG_MAX	kernel/include/limits.h	26;"	d
LONG_MIN	kernel/include/limits.h	27;"	d
LV0_TIMER	kernel/include/proc/sched.h	10;"	d
LV1_TIMER	kernel/include/proc/sched.h	11;"	d
LowOffset	kernel/arch/interrupt.c	/^	unsigned short LowOffset;$/;"	m	struct:_ID	file:
MEM_SIZE	kernel/mem/mm.c	/^static unsigned long MEM_SIZE;$/;"	v	file:
MODIFIER	kernel/arch/Main.c	/^const char* MODIFIER = "You";$/;"	v
MODIFIER	kernel/build/Main.s	/^MODIFIER:$/;"	l
NASM	kernel/Makefile	/^NASM = nasm$/;"	m
NOT_REACHED	kernel/include/debug.h	19;"	d
NOT_REACHED	kernel/include/debug.h	26;"	d
NOT_REACHED	kernel/include/debug.h	29;"	d
NO_INLINE	kernel/include/debug.h	6;"	d
NO_RETURN	kernel/include/debug.h	5;"	d
NSCROLL	kernel/device/console.c	12;"	d	file:
NULL	kernel/include/type.h	16;"	d
NULLDESCRIPTOR	boot/i386/boot1.asm	/^		NULLDESCRIPTOR equ 0x00$/;"	d
NumlockFLag	kernel/include/device/kbd.h	/^	BOOL NumlockFLag;$/;"	m	struct:Key_Status_Struct
OBJS	kernel/Makefile	/^OBJS = $(BUILD_PATH)\/Main.o $(BUILD_PATH)\/io.o $(BUILD_PATH)\/pit.o $(BUILD_PATH)\/interrupt.o $(BUILD_PATH)\/kbd.o $(BUILD_PATH)\/crset.o $(BUILD_PATH)\/paging.o \\$/;"	m
OUT_TO_SERIAL	boot/i386/boot1.asm	/^OUT_TO_SERIAL:$/;"	l
PACKED	kernel/include/packed.h	4;"	d
PAGE_ADDR_AVAIL	kernel/include/mem/paging.h	21;"	d
PAGE_ADDR_BASE	kernel/include/mem/paging.h	22;"	d
PAGE_DIR_SIZE	kernel/include/mem/paging.h	32;"	d
PAGE_FLAG_ACCESS	kernel/include/mem/paging.h	15;"	d
PAGE_FLAG_AVAIL	kernel/include/mem/paging.h	16;"	d
PAGE_FLAG_CACHE	kernel/include/mem/paging.h	14;"	d
PAGE_FLAG_DIRTY	kernel/include/mem/paging.h	17;"	d
PAGE_FLAG_GLOB	kernel/include/mem/paging.h	20;"	d
PAGE_FLAG_PRESENT	kernel/include/mem/paging.h	10;"	d
PAGE_FLAG_PTA	kernel/include/mem/paging.h	19;"	d
PAGE_FLAG_RW	kernel/include/mem/paging.h	11;"	d
PAGE_FLAG_SIZE	kernel/include/mem/paging.h	18;"	d
PAGE_FLAG_USER	kernel/include/mem/paging.h	12;"	d
PAGE_FLAG_WRITE	kernel/include/mem/paging.h	13;"	d
PAGE_MASK_BASE	kernel/include/mem/paging.h	24;"	d
PAGE_MASK_PDE	kernel/include/mem/paging.h	25;"	d
PAGE_MASK_PTE	kernel/include/mem/paging.h	26;"	d
PAGE_OFFSET_PDE	kernel/include/mem/paging.h	27;"	d
PAGE_OFFSET_PTE	kernel/include/mem/paging.h	28;"	d
PAGE_SIZE	kernel/include/mem/paging.h	30;"	d
PAGE_TBL_SIZE	kernel/include/mem/paging.h	31;"	d
PANIC	kernel/include/debug.h	9;"	d
PGBITS	kernel/include/vaddr.h	19;"	d
PGMASK	kernel/include/vaddr.h	21;"	d
PGSHIFT	kernel/include/vaddr.h	18;"	d
PGSIZE	kernel/include/vaddr.h	20;"	d
PHYS_BASE	kernel/include/vaddr.h	53;"	d
PID0_PAGE_DIR	kernel/mem/paging.c	/^uint32_t *PID0_PAGE_DIR;$/;"	v
PIT_BCD	kernel/include/device/pit.h	27;"	d
PIT_BINARY	kernel/include/device/pit.h	26;"	d
PIT_CHANNEL0	kernel/include/device/pit.h	4;"	d
PIT_CHANNEL1	kernel/include/device/pit.h	5;"	d
PIT_CHANNEL2	kernel/include/device/pit.h	6;"	d
PIT_COMMAND	kernel/include/device/pit.h	7;"	d
PIT_COUNTER0	kernel/include/device/pit.h	9;"	d
PIT_COUNTER1	kernel/include/device/pit.h	10;"	d
PIT_COUNTER2	kernel/include/device/pit.h	11;"	d
PIT_FRQ_HZ	kernel/include/device/pit.h	30;"	d
PIT_HZ	kernel/include/device/pit.h	29;"	d
PIT_MODE0	kernel/include/device/pit.h	19;"	d
PIT_MODE1	kernel/include/device/pit.h	20;"	d
PIT_MODE2	kernel/include/device/pit.h	21;"	d
PIT_MODE3	kernel/include/device/pit.h	22;"	d
PIT_MODE4	kernel/include/device/pit.h	23;"	d
PIT_MODE5	kernel/include/device/pit.h	24;"	d
PIT_READBACK	kernel/include/device/pit.h	12;"	d
PIT_RW_COUNTER_LATCH	kernel/include/device/pit.h	14;"	d
PIT_RW_LBYTE	kernel/include/device/pit.h	15;"	d
PIT_RW_LMBYTE	kernel/include/device/pit.h	17;"	d
PIT_RW_MBYTE	kernel/include/device/pit.h	16;"	d
PLUS	kernel/vsprintk.c	5;"	d	file:
PRDSNu	kernel/include/device/block.h	19;"	d
PRINT	boot/i386/boot1.asm	/^PRINT:$/;"	l
PRINTF_FORMAT	kernel/include/debug.h	7;"	d
PRINT_END	boot/i386/boot1.asm	/^PRINT_END:$/;"	l
PRINT_LOOP	boot/i386/boot1.asm	/^PRINT_LOOP:$/;"	l
PRINT_NEW_LINE	boot/i386/boot1.asm	/^PRINT_NEW_LINE:$/;"	l
PRINT_TO_SERIAL	boot/i386/boot1.asm	/^PRINT_TO_SERIAL:$/;"	l
PRIX16	kernel/include/inttypes.h	18;"	d
PRIX32	kernel/include/inttypes.h	25;"	d
PRIX64	kernel/include/inttypes.h	32;"	d
PRIX8	kernel/include/inttypes.h	11;"	d
PRIXMAX	kernel/include/inttypes.h	39;"	d
PRIXPTR	kernel/include/inttypes.h	46;"	d
PRId16	kernel/include/inttypes.h	13;"	d
PRId32	kernel/include/inttypes.h	20;"	d
PRId64	kernel/include/inttypes.h	27;"	d
PRId8	kernel/include/inttypes.h	6;"	d
PRIdMAX	kernel/include/inttypes.h	34;"	d
PRIdPTR	kernel/include/inttypes.h	41;"	d
PRIi16	kernel/include/inttypes.h	14;"	d
PRIi32	kernel/include/inttypes.h	21;"	d
PRIi64	kernel/include/inttypes.h	28;"	d
PRIi8	kernel/include/inttypes.h	7;"	d
PRIiMAX	kernel/include/inttypes.h	35;"	d
PRIiPTR	kernel/include/inttypes.h	42;"	d
PRIo16	kernel/include/inttypes.h	15;"	d
PRIo32	kernel/include/inttypes.h	22;"	d
PRIo64	kernel/include/inttypes.h	29;"	d
PRIo8	kernel/include/inttypes.h	8;"	d
PRIoMAX	kernel/include/inttypes.h	36;"	d
PRIoPTR	kernel/include/inttypes.h	43;"	d
PRIu16	kernel/include/inttypes.h	16;"	d
PRIu32	kernel/include/inttypes.h	23;"	d
PRIu64	kernel/include/inttypes.h	30;"	d
PRIu8	kernel/include/inttypes.h	9;"	d
PRIuMAX	kernel/include/inttypes.h	37;"	d
PRIuPTR	kernel/include/inttypes.h	44;"	d
PRIx16	kernel/include/inttypes.h	17;"	d
PRIx32	kernel/include/inttypes.h	24;"	d
PRIx64	kernel/include/inttypes.h	31;"	d
PRIx8	kernel/include/inttypes.h	10;"	d
PRIxMAX	kernel/include/inttypes.h	38;"	d
PRIxPTR	kernel/include/inttypes.h	45;"	d
PROC_BLOCK	kernel/include/proc/proc.h	/^	PROC_BLOCK,$/;"	e	enum:p_state
PROC_NUM_MAX	kernel/include/proc/proc.h	6;"	d
PROC_RUN	kernel/include/proc/proc.h	/^	PROC_RUN,	$/;"	e	enum:p_state
PROC_STOP	kernel/include/proc/proc.h	/^	PROC_STOP,$/;"	e	enum:p_state
PROC_UNUSED	kernel/include/proc/proc.h	/^	PROC_UNUSED,$/;"	e	enum:p_state
PROC_ZOMBIE	kernel/include/proc/proc.h	/^	PROC_ZOMBIE,$/;"	e	enum:p_state
PROTECTED	boot/i386/boot1.asm	/^PROTECTED:$/;"	l
PTRDIFF_MAX	kernel/include/stdint.h	47;"	d
PTRDIFF_MAX	kernel/include/type.h	72;"	d
PTRDIFF_MIN	kernel/include/stdint.h	46;"	d
PTRDIFF_MIN	kernel/include/type.h	71;"	d
PauseFlag	kernel/include/device/kbd.h	/^	int PauseFlag;$/;"	m	struct:Key_Status_Struct
PrintChar	kernel/device/console.c	/^void PrintChar(int x, int y, const char String) $/;"	f
PrintCharToScreen	kernel/device/console.c	/^void PrintCharToScreen(int x, int y, const char *pString) $/;"	f
QUE_LV_MAX	kernel/include/proc/sched.h	9;"	d
READY_TO_PRINT	boot/i386/boot1.asm	/^READY_TO_PRINT:$/;"	l
REAL	kernel/arch/i386/intr-stubs.S	/^#define REAL                                    \\$/;"	d
REFRESH_FPS	kernel/include/interrupt.h	10;"	d
REGSYS	kernel/arch/syscall.c	68;"	d	file:
ROUND_DOWN	kernel/include/round.h	8;"	d
ROUND_UP	kernel/include/round.h	4;"	d
SCHAR_MAX	kernel/include/limits.h	6;"	d
SCHAR_MIN	kernel/include/limits.h	7;"	d
SCROLL_END	kernel/device/console.c	23;"	d	file:
SEL_KCSEG	kernel/include/loader.h	22;"	d
SEL_KDSEG	kernel/include/loader.h	23;"	d
SEL_NULL	kernel/include/loader.h	21;"	d
SERIAL_STDOUT	kernel/include/device/console.h	17;"	d
SETUP_GDT	boot/i386/boot1.asm	/^SETUP_GDT:$/;"	l
SHRT_MAX	kernel/include/limits.h	18;"	d
SHRT_MIN	kernel/include/limits.h	19;"	d
SIGN	kernel/vsprintk.c	4;"	d	file:
SIZE_MAX	kernel/include/stdint.h	49;"	d
SIZE_MAX	kernel/include/type.h	74;"	d
SIZE_SCREEN	kernel/device/console.c	11;"	d	file:
SIZE_SCROLL	kernel/device/console.c	13;"	d	file:
SMALL	kernel/vsprintk.c	9;"	d	file:
SPACE	kernel/vsprintk.c	6;"	d	file:
SPECIAL	kernel/vsprintk.c	8;"	d	file:
STACK_SIZE	kernel/proc/proc.c	13;"	d	file:
START	boot/i386/bootloader.asm	/^START:   $/;"	l
STUB	kernel/arch/i386/intr-stubs.S	/^#define STUB(NUMBER, TYPE)                      \\$/;"	d
SYSCALL_ARG_MAX	kernel/arch/interrupt.c	202;"	d	file:
SYS_EXIT	kernel/include/syscall.h	/^	SYS_EXIT,$/;"	e	enum:SYS_LIST
SYS_FORK	kernel/include/syscall.h	/^	SYS_FORK = 0,$/;"	e	enum:SYS_LIST
SYS_LIST	kernel/include/syscall.h	/^enum SYS_LIST {$/;"	g
SYS_NUM	kernel/include/syscall.h	/^	SYS_NUM,$/;"	e	enum:SYS_LIST
SYS_SHUTDOWN	kernel/include/syscall.h	/^	SYS_SHUTDOWN,$/;"	e	enum:SYS_LIST
SYS_SSUREAD	kernel/include/syscall.h	/^	SYS_SSUREAD,$/;"	e	enum:SYS_LIST
SYS_WAIT	kernel/include/syscall.h	/^	SYS_WAIT,$/;"	e	enum:SYS_LIST
ScrolllockFlag	kernel/include/device/kbd.h	/^	BOOL ScrolllockFlag;$/;"	m	struct:Key_Status_Struct
ShiftFlag	kernel/include/device/kbd.h	/^	BOOL ShiftFlag; 	$/;"	m	struct:Key_Status_Struct
Size	kernel/arch/interrupt.c	/^	unsigned short Size;$/;"	m	struct:_IDTR	file:
THREADS_LOADER_H	kernel/include/loader.h	2;"	d
THREADS_VADDR_H	kernel/include/vaddr.h	2;"	d
THR_EMPTY	kernel/device/console.c	19;"	d	file:
TIMER_MAX	kernel/include/interrupt.h	9;"	d
TRUE	kernel/include/type.h	12;"	d
Type	kernel/arch/interrupt.c	/^	unsigned short Type;$/;"	m	struct:_ID	file:
UCHAR_MAX	kernel/include/limits.h	8;"	d
UINT16_MAX	kernel/include/stdint.h	24;"	d
UINT16_MAX	kernel/include/type.h	49;"	d
UINT32_MAX	kernel/include/stdint.h	27;"	d
UINT32_MAX	kernel/include/type.h	52;"	d
UINT64_MAX	kernel/include/stdint.h	30;"	d
UINT64_MAX	kernel/include/type.h	55;"	d
UINT8_MAX	kernel/include/stdint.h	21;"	d
UINT8_MAX	kernel/include/type.h	46;"	d
UINTMAX_MAX	kernel/include/stdint.h	44;"	d
UINTMAX_MAX	kernel/include/type.h	69;"	d
UINTPTR_MAX	kernel/include/stdint.h	37;"	d
UINTPTR_MAX	kernel/include/type.h	62;"	d
UINT_MAX	kernel/include/limits.h	24;"	d
ULLONG_MAX	kernel/include/limits.h	32;"	d
ULONG_MAX	kernel/include/limits.h	28;"	d
UNUSED	kernel/include/debug.h	4;"	d
USHRT_MAX	kernel/include/limits.h	20;"	d
UpdateKeyStat	kernel/device/kbd.c	/^void UpdateKeyStat(BYTE Scancode)$/;"	f
VERSION	kernel/arch/Main.c	/^const char* VERSION = "0.1.02";$/;"	v
VERSION	kernel/build/Main.s	/^VERSION:$/;"	l
VIDEODESCRIPTOR	boot/i386/boot1.asm	/^		VIDEODESCRIPTOR equ 0x18$/;"	d
VIDIO_MEMORY	kernel/device/console.c	14;"	d	file:
VSCREEN	kernel/device/console.c	10;"	d	file:
ZEROPAD	kernel/vsprintk.c	3;"	d	file:
_ADDRESSOF	kernel/include/stdarg.h	6;"	d
_ID	kernel/arch/interrupt.c	/^typedef struct _ID$/;"	s	file:
_ID	kernel/arch/interrupt.c	/^} _ID;$/;"	t	typeref:struct:_ID	file:
_IDTR	kernel/arch/interrupt.c	/^typedef struct _IDTR$/;"	s	file:
_IDTR	kernel/arch/interrupt.c	/^} _IDTR;$/;"	t	typeref:struct:_IDTR	file:
_INTR_STUBS_H_	kernel/include/intr-stubs.h	2;"	d
_INTSIZEOF	kernel/include/stdarg.h	7;"	d
_SWITCH_H_	kernel/include/proc/switch.h	2;"	d
__BITMAP_H__	kernel/include/bitmap.h	2;"	d
__CONSOLE_H__	kernel/include/device/console.h	2;"	d
__DEVICE_H__	kernel/include/device/device.h	2;"	d
__DO_SYSCALL_H__	kernel/include/do_syscall.h	2;"	d
__INTERRUPT_H__	kernel/include/interrupt.h	2;"	d
__IO_H__	kernel/include/device/io.h	2;"	d
__KDB_H__	kernel/include/device/kbd.h	2;"	d
__LIB_CTYPE_H	kernel/include/ctype.h	2;"	d
__LIB_DEBUG_H	kernel/include/debug.h	2;"	d
__LIB_INTTYPES_H	kernel/include/inttypes.h	2;"	d
__LIB_PACKED_H	kernel/include/packed.h	2;"	d
__LIB_ROUND_H	kernel/include/round.h	2;"	d
__LIB_STDBOOL_H	kernel/include/stdbool.h	2;"	d
__LIB_STDDEF_H	kernel/include/stddef.h	2;"	d
__LIB_STDINT_H	kernel/include/stdint.h	2;"	d
__LIB_STDLIB_H	kernel/include/stdlib.h	2;"	d
__LIB_STRING_H	kernel/include/string.h	2;"	d
__LIMITS_H__	kernel/include/limits.h	2;"	d
__LIST_H__	kernel/include/list.h	2;"	d
__MALLOC_H__	kernel/include/mem/malloc.h	2;"	d
__MEM_H__	kernel/include/mem/mm.h	2;"	d
__PAGING_H__	kernel/include/mem/paging.h	2;"	d
__PALLOC_H__	kernel/include/mem/palloc.h	2;"	d
__PIT_H__	kernel/include/device/pit.h	2;"	d
__PROC_H__	kernel/include/proc/proc.h	2;"	d
__SCHED_H__	kernel/include/proc/sched.h	2;"	d
__SSULIB_H__	kernel/include/ssulib.h	2;"	d
__STDARG_H__	kernel/include/stdarg.h	2;"	d
__SYNCH_H__	kernel/include/synch.h	2;"	d
__SYSCALL_H__	kernel/include/syscall.h	2;"	d
__TYPE_H__	kernel/include/type.h	2;"	d
__bool_true_false_are_defined	kernel/include/stdbool.h	7;"	d
a_s	kernel/device/console.c	/^bool a_s = TRUE;$/;"	v
all_blocks	kernel/device/block.c	/^static struct list all_blocks = LIST_INITIALIZER (all_blocks);$/;"	v	typeref:struct:list	file:
arch	kernel/Makefile	/^arch = .\/arch$/;"	m
archx86	kernel/Makefile	/^archx86 = .\/arch\/i386$/;"	m
arena	kernel/mem/malloc.c	/^struct arena $/;"	s	file:
arena_to_block	kernel/mem/malloc.c	/^arena_to_block (struct arena *a, size_t idx) $/;"	f	file:
aux	kernel/device/block.c	/^    void *aux;                          \/* Extra data owned by driver. *\/$/;"	m	struct:block	file:
bAtt	kernel/include/device/console.h	/^		unsigned char bAtt;$/;"	m	struct:kChStruct
bCh	kernel/include/device/console.h	/^		unsigned char bCh;$/;"	m	struct:kChStruct
barrier	kernel/include/synch.h	42;"	d
base	kernel/mem/palloc.c	/^	uint32_t *base; $/;"	m	struct:pool	file:
bit_cnt	kernel/bitmap.c	/^	size_t bit_cnt;     \/* Number of bits. *\/$/;"	m	struct:bitmap	file:
bit_mask	kernel/bitmap.c	/^bit_mask (size_t bit_idx) $/;"	f	file:
bitmap	kernel/bitmap.c	/^struct bitmap$/;"	s	file:
bitmap_all	kernel/bitmap.c	/^bitmap_all (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_any	kernel/bitmap.c	/^bitmap_any (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_buf_size	kernel/bitmap.c	/^bitmap_buf_size (size_t bit_cnt) $/;"	f
bitmap_contains	kernel/bitmap.c	/^bitmap_contains (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_count	kernel/bitmap.c	/^bitmap_count (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_create_in_buf	kernel/bitmap.c	/^bitmap_create_in_buf (size_t bit_cnt, void *block, size_t block_size)\/\/ UNUSED)$/;"	f
bitmap_file_size	kernel/bitmap.c	/^bitmap_file_size (const struct bitmap *b) $/;"	f
bitmap_flip	kernel/bitmap.c	/^bitmap_flip (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_mark	kernel/bitmap.c	/^bitmap_mark (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_none	kernel/bitmap.c	/^bitmap_none (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_read	kernel/bitmap.c	/^bitmap_read (struct bitmap *b, struct file *file) $/;"	f
bitmap_reset	kernel/bitmap.c	/^bitmap_reset (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_scan	kernel/bitmap.c	/^bitmap_scan (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_scan_and_flip	kernel/bitmap.c	/^bitmap_scan_and_flip (struct bitmap *b, size_t start, size_t cnt, bool value)$/;"	f
bitmap_set	kernel/bitmap.c	/^bitmap_set (struct bitmap *b, size_t idx, bool value) $/;"	f
bitmap_set_all	kernel/bitmap.c	/^bitmap_set_all (struct bitmap *b, bool value) $/;"	f
bitmap_set_multiple	kernel/bitmap.c	/^bitmap_set_multiple (struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_size	kernel/bitmap.c	/^bitmap_size (const struct bitmap *b)$/;"	f
bitmap_test	kernel/bitmap.c	/^bitmap_test (const struct bitmap *b, size_t idx) $/;"	f
bitmap_write	kernel/bitmap.c	/^bitmap_write (const struct bitmap *b, struct file *file)$/;"	f
bits	kernel/bitmap.c	/^	elem_type *bits;    \/* Elements that represent bits. *\/$/;"	m	struct:bitmap	file:
block	kernel/device/block.c	/^struct block$/;"	s	file:
block	kernel/device/partition.c	/^    struct block *block;                \/* Underlying block device. *\/$/;"	m	struct:partition	typeref:struct:partition::block	file:
block	kernel/mem/malloc.c	/^struct block $/;"	s	file:
block_by_role	kernel/device/block.c	/^static struct block *block_by_role[BLOCK_ROLE_CNT];$/;"	v	typeref:struct:block	file:
block_first	kernel/device/block.c	/^block_first (void)$/;"	f
block_get_by_name	kernel/device/block.c	/^block_get_by_name (const char *name)$/;"	f
block_get_role	kernel/device/block.c	/^block_get_role (enum block_type role)$/;"	f
block_name	kernel/device/block.c	/^block_name (struct block *block)$/;"	f
block_next	kernel/device/block.c	/^block_next (struct block *block)$/;"	f
block_operations	kernel/include/device/block.h	/^struct block_operations$/;"	s
block_print_stats	kernel/device/block.c	/^block_print_stats (void)$/;"	f
block_read	kernel/device/block.c	/^block_read (struct block *block, block_sector_t sector, void *buffer)$/;"	f
block_register	kernel/device/block.c	/^block_register (const char *name, enum block_type type,$/;"	f
block_sector_t	kernel/include/device/block.h	/^typedef uint32_t block_sector_t;$/;"	t
block_set_role	kernel/device/block.c	/^block_set_role (enum block_type role, struct block *block)$/;"	f
block_size	kernel/device/block.c	/^block_size (struct block *block)$/;"	f
block_size	kernel/mem/malloc.c	/^    size_t block_size;          \/* Size of each element in bytes. *\/$/;"	m	struct:desc	file:
block_size	kernel/mem/malloc.c	/^block_size (void *block) $/;"	f	file:
block_to_arena	kernel/mem/malloc.c	/^block_to_arena (struct block *b)$/;"	f	file:
block_type	kernel/device/block.c	/^block_type (struct block *block)$/;"	f
block_type	kernel/include/device/block.h	/^enum block_type$/;"	g
block_type_name	kernel/device/block.c	/^block_type_name (enum block_type type)$/;"	f
block_write	kernel/device/block.c	/^block_write (struct block *block, block_sector_t sector, const void *buffer)$/;"	f
blocks_per_arena	kernel/mem/malloc.c	/^    size_t blocks_per_arena;    \/* Number of blocks in an arena. *\/$/;"	m	struct:desc	file:
bool	kernel/include/type.h	/^typedef char bool;$/;"	t
buf_e	kernel/device/console.c	22;"	d	file:
buf_head	kernel/device/kbd.c	/^int buf_head, buf_tail;$/;"	v
buf_p	kernel/device/console.c	/^char *buf_p;	$/;"	v
buf_s	kernel/device/console.c	/^char buf_s[SIZE_SCROLL];$/;"	v
buf_tail	kernel/device/kbd.c	/^int buf_head, buf_tail;$/;"	v
buf_w	kernel/device/console.c	/^char *buf_w;	$/;"	v
byte_cnt	kernel/bitmap.c	/^byte_cnt (size_t bit_cnt)$/;"	f	file:
calloc	kernel/mem/malloc.c	/^calloc (size_t a, size_t b) $/;"	f
check_sector	kernel/device/block.c	/^check_sector (struct block *block, block_sector_t sector)$/;"	f	file:
child_pid	kernel/include/proc/proc.h	/^	int child_pid;$/;"	m	struct:process
clrScreen	kernel/device/console.c	/^void clrScreen(void) $/;"	f
condition	kernel/include/synch.h	/^struct condition $/;"	s
cs	kernel/include/interrupt.h	/^	uint16_t cs, :16;$/;"	m	struct:intr_frame
cur_process	kernel/proc/proc.c	/^struct process *cur_process;$/;"	v	typeref:struct:process
default_handler	kernel/arch/interrupt.c	/^void default_handler(struct intr_frame *iframe)$/;"	f
desc	kernel/mem/malloc.c	/^    struct desc *desc;          \/* Owning descriptor, null for big block. *\/$/;"	m	struct:arena	typeref:struct:arena::desc	file:
desc	kernel/mem/malloc.c	/^struct desc$/;"	s	file:
desc_cnt	kernel/mem/malloc.c	/^static size_t desc_cnt;         \/* Number of descriptors. *\/$/;"	v	file:
descs	kernel/mem/malloc.c	/^static struct desc descs[10];   \/* Descriptors. *\/$/;"	v	typeref:struct:desc	file:
detect_mem	kernel/mem/mm.c	/^void detect_mem()$/;"	f
dev_shutdown	kernel/device/device.c	/^void dev_shutdown(void)$/;"	f
device	kernel/Makefile	/^device = .\/device$/;"	m
dlist	kernel/proc/proc.c	/^struct list dlist;				$/;"	v	typeref:struct:list
do_div	kernel/vsprintk.c	13;"	d	file:
do_exit	kernel/arch/do_syscall.c	/^void do_exit(int status)$/;"	f
do_fork	kernel/arch/do_syscall.c	/^pid_t do_fork(proc_func func, void* aux)$/;"	f
do_sched_on_return	kernel/arch/interrupt.c	/^void do_sched_on_return(void)$/;"	f
do_shutdown	kernel/arch/do_syscall.c	/^void do_shutdown(void)$/;"	f
do_ssuread	kernel/arch/do_syscall.c	/^int do_ssuread(void)$/;"	f
do_wait	kernel/arch/do_syscall.c	/^pid_t do_wait(int *status)$/;"	f
ds	kernel/include/interrupt.h	/^	uint16_t ds, :16;$/;"	m	struct:intr_frame
dw	boot/i386/bootloader.asm	/^dw	0xaa55$/;"	l
eax	kernel/include/interrupt.h	/^	uint32_t eax; $/;"	m	struct:intr_frame
ebp	kernel/include/interrupt.h	/^	uint32_t ebp; $/;"	m	struct:intr_frame
ebx	kernel/include/interrupt.h	/^	uint32_t ebx; $/;"	m	struct:intr_frame
ecx	kernel/include/interrupt.h	/^	uint32_t ecx; $/;"	m	struct:intr_frame
edi	kernel/include/interrupt.h	/^	uint32_t edi; $/;"	m	struct:intr_frame
edx	kernel/include/interrupt.h	/^	uint32_t edx; $/;"	m	struct:intr_frame
eflags	kernel/include/interrupt.h	/^	uint32_t eflags;$/;"	m	struct:intr_frame
eip	kernel/include/interrupt.h	/^	void (*eip) (void);$/;"	m	struct:intr_frame
elem_all	kernel/include/proc/proc.h	/^	struct list_elem elem_all;	$/;"	m	struct:process	typeref:struct:process::list_elem
elem_cnt	kernel/bitmap.c	/^elem_cnt (size_t bit_cnt)$/;"	f	file:
elem_idx	kernel/bitmap.c	/^elem_idx (size_t bit_idx) $/;"	f	file:
elem_stat	kernel/include/proc/proc.h	/^	struct list_elem elem_stat;	$/;"	m	struct:process	typeref:struct:process::list_elem
elem_type	kernel/bitmap.c	/^typedef unsigned long elem_type;$/;"	t	file:
error_code	kernel/include/interrupt.h	/^    uint32_t error_code; $/;"	m	struct:intr_frame
es	kernel/include/interrupt.h	/^	uint16_t es, :16;$/;"	m	struct:intr_frame
esi	kernel/include/interrupt.h	/^	uint32_t esi; $/;"	m	struct:intr_frame
esp	kernel/include/interrupt.h	/^	void *esp; $/;"	m	struct:intr_frame
esp_dummy	kernel/include/interrupt.h	/^	uint32_t esp_dummy; $/;"	m	struct:intr_frame
exit	kernel/arch/syscall.c	/^void exit(int status)$/;"	f
exit_status	kernel/include/proc/proc.h	/^	int exit_status;$/;"	m	struct:process
f	Makefile	/^	dd if=disk.bin of=disk.img bs=10240000 seek=0 count=1 conv=notrunc$/;"	m
false	kernel/include/stdbool.h	6;"	d
false	kernel/include/type.h	22;"	d
find_end_of_run	kernel/list.c	/^find_end_of_run (struct list_elem *a, struct list_elem *b,$/;"	f	file:
fork	kernel/arch/syscall.c	/^pid_t fork(proc_func func, void* aux)$/;"	f
found_partition	kernel/device/partition.c	/^found_partition (struct block *block, uint8_t part_type,$/;"	f	file:
frame_pointer	kernel/include/interrupt.h	/^	void *frame_pointer;$/;"	m	struct:intr_frame
free	kernel/mem/malloc.c	/^free (void *p) $/;"	f
free_cnt	kernel/mem/malloc.c	/^    size_t free_cnt;            \/* Free blocks; pages in big block. *\/$/;"	m	struct:arena	file:
free_elem	kernel/mem/malloc.c	/^    struct list_elem free_elem; \/* Free list element. *\/$/;"	m	struct:block	typeref:struct:block::list_elem	file:
free_list	kernel/mem/malloc.c	/^    struct list free_list;      \/* List of free blocks. *\/$/;"	m	struct:desc	typeref:struct:desc::list	file:
fs	kernel/include/interrupt.h	/^	uint16_t fs, :16;$/;"	m	struct:intr_frame
getEIP	kernel/proc/proc.c	/^void* getEIP()$/;"	f
getMemSize	kernel/arch/i386/mem.asm	/^getMemSize:		$/;"	l
getToken	kernel/ssulib.c	/^int getToken(char* buf, int len)$/;"	f
getValidPid	kernel/proc/proc.c	/^pid_t getValidPid(int *idx) {$/;"	f
get_cur_pd	kernel/mem/paging.c	/^uint32_t* get_cur_pd()$/;"	f
get_next_proc	kernel/proc/sched.c	/^struct process* get_next_proc(struct list *rlist_target) {$/;"	f
get_ticks	kernel/arch/interrupt.c	/^unsigned long get_ticks(void)$/;"	f
getchar	kernel/ssulib.c	/^char getchar()$/;"	f
gs	kernel/include/interrupt.h	/^	uint16_t gs, :16;$/;"	m	struct:intr_frame
handlers	kernel/arch/interrupt.c	/^intr_handler_func *handlers[INTR_MAX];$/;"	v
head	kernel/include/list.h	/^    struct list_elem head;      \/* List head. *\/$/;"	m	struct:list	typeref:struct:list::list_elem
hexDump	kernel/proc/proc.c	/^void hexDump (void *addr, int len) {$/;"	f
holder	kernel/include/synch.h	/^      struct process *holder;      $/;"	m	struct:lock	typeref:struct:lock::process
idle	kernel/include/proc/proc.h	/^proc_func idle;	$/;"	v
idle	kernel/proc/proc.c	/^void idle(void* aux)$/;"	f
idle_process	kernel/proc/proc.c	/^struct process *idle_process; $/;"	v	typeref:struct:process
idt	kernel/arch/interrupt.c	/^_ID     *idt;$/;"	v
in_external_intr	kernel/arch/interrupt.c	/^static bool in_external_intr;  $/;"	v	file:
inb	kernel/arch/i386/io.asm	/^inb:$/;"	l
init_console	kernel/device/console.c	/^void init_console(void)$/;"	f
init_intr	kernel/arch/interrupt.c	/^int init_intr(void)$/;"	f
init_kbd	kernel/device/kbd.c	/^void init_kbd(void)$/;"	f
init_paging	kernel/mem/paging.c	/^void init_paging()$/;"	f
init_palloc	kernel/mem/palloc.c	/^void init_palloc (void) $/;"	f
init_pit	kernel/device/pit.c	/^void init_pit(void)  $/;"	f
init_pool	kernel/mem/palloc.c	/^static void init_pool (struct pool *p, void *base, size_t page_cnt, const char *name) $/;"	f	file:
init_proc	kernel/proc/proc.c	/^void init_proc()$/;"	f
init_syscall	kernel/arch/syscall.c	/^void init_syscall(void)$/;"	f
inl	kernel/arch/i386/io.asm	/^inl:$/;"	l
inplace_merge	kernel/list.c	/^inplace_merge (struct list_elem *a0, struct list_elem *a1b0,$/;"	f	file:
insw	kernel/include/device/io.h	/^insw (uint16_t port, void *addr, size_t cnt)$/;"	f
int16_t	kernel/include/stdint.h	/^typedef signed short int int16_t;$/;"	t
int16_t	kernel/include/type.h	/^typedef signed short int int16_t;$/;"	t
int32_t	kernel/include/stdint.h	/^typedef signed int int32_t;$/;"	t
int32_t	kernel/include/type.h	/^typedef signed int int32_t;$/;"	t
int64_t	kernel/include/stdint.h	/^typedef signed long long int int64_t;$/;"	t
int64_t	kernel/include/type.h	/^typedef signed long long int int64_t;$/;"	t
int8_t	kernel/include/stdint.h	/^typedef signed char int8_t;$/;"	t
int8_t	kernel/include/type.h	/^typedef signed char int8_t;$/;"	t
intmax_t	kernel/include/stdint.h	/^typedef int64_t intmax_t;$/;"	t
intmax_t	kernel/include/type.h	/^typedef int64_t intmax_t;$/;"	t
intptr_t	kernel/include/stdint.h	/^typedef int32_t intptr_t;$/;"	t
intptr_t	kernel/include/type.h	/^typedef int32_t intptr_t;$/;"	t
intr_common	kernel/arch/interrupt.c	/^void intr_common(struct intr_frame *iframe)$/;"	f
intr_context	kernel/arch/interrupt.c	/^bool intr_context (void)$/;"	f
intr_disable	kernel/arch/interrupt.c	/^enum intr_level intr_disable (void) $/;"	f
intr_enable	kernel/arch/interrupt.c	/^enum intr_level intr_enable (void) $/;"	f
intr_entry	kernel/arch/i386/intr-stubs.S	/^intr_entry:$/;"	l
intr_exit	kernel/arch/i386/intr-stubs.S	/^intr_exit:$/;"	l
intr_frame	kernel/include/interrupt.h	/^struct intr_frame$/;"	s
intr_get_level	kernel/arch/interrupt.c	/^enum intr_level intr_get_level (void) $/;"	f
intr_handler_func	kernel/include/interrupt.h	/^typedef void intr_handler_func (struct intr_frame *);$/;"	t
intr_level	kernel/include/interrupt.h	/^enum intr_level$/;"	g
intr_set_level	kernel/arch/interrupt.c	/^enum intr_level intr_set_level (enum intr_level level) $/;"	f
intr_stub_func	kernel/arch/interrupt.c	/^typedef void intr_stub_func (void);$/;"	t	file:
intr_stub_func	kernel/include/intr-stubs.h	/^typedef void intr_stub_func (void);$/;"	t
intr_stubs	kernel/arch/i386/intr-stubs.S	/^intr_stubs:$/;"	l
iowait	kernel/arch/i386/io.asm	/^iowait:$/;"	l
isEmpty	kernel/device/kbd.c	/^bool isEmpty()$/;"	f
isFull	kernel/device/kbd.c	/^bool isFull()$/;"	f
is_digit	kernel/vsprintk.c	11;"	d	file:
is_head	kernel/list.c	/^is_head (struct list_elem *elem)$/;"	f	file:
is_interior	kernel/list.c	/^is_interior (struct list_elem *elem)$/;"	f	file:
is_kernel_vaddr	kernel/include/vaddr.h	/^is_kernel_vaddr (const void *vaddr) $/;"	f
is_sorted	kernel/list.c	/^is_sorted (struct list_elem *a, struct list_elem *b,$/;"	f	file:
is_tail	kernel/list.c	/^is_tail (struct list_elem *elem)$/;"	f	file:
is_user_vaddr	kernel/include/vaddr.h	/^is_user_vaddr (const void *vaddr) $/;"	f
isalnum	kernel/include/ctype.h	/^static inline int isalnum (int c) { return isalpha (c) || isdigit (c); }$/;"	f
isalpha	kernel/include/ctype.h	/^static inline int isalpha (int c) { return islower (c) || isupper (c); }$/;"	f
isascii	kernel/include/ctype.h	/^static inline int isascii (int c) { return c >= 0 && c < 128; }$/;"	f
isblank	kernel/include/ctype.h	/^static inline int isblank (int c) { return c == ' ' || c == '\\t'; }$/;"	f
iscntrl	kernel/include/ctype.h	/^static inline int iscntrl (int c) { return (c >= 0 && c < 32) || c == 127; }$/;"	f
isdigit	kernel/include/ctype.h	/^static inline int isdigit (int c) { return c >= '0' && c <= '9'; }$/;"	f
isgraph	kernel/include/ctype.h	/^static inline int isgraph (int c) { return c > 32 && c < 127; }$/;"	f
islower	kernel/include/ctype.h	/^static inline int islower (int c) { return c >= 'a' && c <= 'z'; }$/;"	f
isprint	kernel/include/ctype.h	/^static inline int isprint (int c) { return c >= 32 && c < 127; }$/;"	f
ispunct	kernel/include/ctype.h	/^static inline int ispunct (int c) {$/;"	f
isspace	kernel/include/ctype.h	/^static inline int isspace (int c) {$/;"	f
isupper	kernel/include/ctype.h	/^static inline int isupper (int c) { return c >= 'A' && c <= 'Z'; }$/;"	f
isxdigit	kernel/include/ctype.h	/^static inline int isxdigit (int c) {$/;"	f
jmp	boot/i386/bootloader.asm	/^jmp		0x0900:0x0000$/;"	l
kChStruct	kernel/include/device/console.h	/^typedef struct kChStruct$/;"	s
kbd_buf	kernel/device/kbd.c	/^static char kbd_buf[BUFSIZ];$/;"	v	file:
kbd_handler	kernel/device/kbd.c	/^void kbd_handler(struct intr_frame *iframe)$/;"	f
kbd_read_char	kernel/device/kbd.c	/^char kbd_read_char()$/;"	f
kernel10_proc	kernel/proc/proc.c	/^void kernel10_proc(void* aux)$/;"	f
kernel1_proc	kernel/proc/proc.c	/^void kernel1_proc(void* aux)$/;"	f
kernel2_proc	kernel/proc/proc.c	/^void kernel2_proc(void* aux)$/;"	f
kernel3_proc	kernel/proc/proc.c	/^void kernel3_proc(void* aux)$/;"	f
kernel4_proc	kernel/proc/proc.c	/^void kernel4_proc(void* aux)$/;"	f
kernel5_proc	kernel/proc/proc.c	/^void kernel5_proc(void* aux)$/;"	f
kernel6_proc	kernel/proc/proc.c	/^void kernel6_proc(void* aux)$/;"	f
kernel7_proc	kernel/proc/proc.c	/^void kernel7_proc(void* aux)$/;"	f
kernel8_proc	kernel/proc/proc.c	/^void kernel8_proc(void* aux)$/;"	f
kernel9_proc	kernel/proc/proc.c	/^void kernel9_proc(void* aux)$/;"	f
last_mask	kernel/bitmap.c	/^last_mask (const struct bitmap *b) $/;"	f	file:
lately_pid	kernel/proc/proc.c	/^static int lately_pid; $/;"	v	file:
latest	kernel/proc/sched.c	/^struct process *latest;$/;"	v	typeref:struct:process
less_time_sleep	kernel/proc/proc.c	/^bool less_time_sleep(const struct list_elem *a, const struct list_elem *b,void *aux)$/;"	f
level_que	kernel/proc/proc.c	/^struct list level_que[QUE_LV_MAX];$/;"	v	typeref:struct:list
lib	kernel/Makefile	/^lib = .\/lib$/;"	m
list	kernel/include/list.h	/^struct list $/;"	s
list_back	kernel/list.c	/^list_back (struct list *list)$/;"	f
list_begin	kernel/list.c	/^list_begin (struct list *list)$/;"	f
list_elem	kernel/device/block.c	/^    struct list_elem list_elem;         \/* Element in all_blocks. *\/$/;"	m	struct:block	typeref:struct:block::list_elem	file:
list_elem	kernel/include/list.h	/^struct list_elem $/;"	s
list_elem_to_block	kernel/device/block.c	/^list_elem_to_block (struct list_elem *list_elem)$/;"	f	file:
list_empty	kernel/list.c	/^list_empty (struct list *list)$/;"	f
list_end	kernel/list.c	/^list_end (struct list *list)$/;"	f
list_entry	kernel/include/list.h	107;"	d
list_front	kernel/list.c	/^list_front (struct list *list)$/;"	f
list_head	kernel/list.c	/^list_head (struct list *list) $/;"	f
list_init	kernel/list.c	/^list_init (struct list *list)$/;"	f
list_insert	kernel/list.c	/^list_insert (struct list_elem *before, struct list_elem *elem)$/;"	f
list_insert_ordered	kernel/list.c	/^list_insert_ordered (struct list *list, struct list_elem *elem,$/;"	f
list_less_func	kernel/include/list.h	/^typedef bool list_less_func (const struct list_elem *a,$/;"	t
list_max	kernel/list.c	/^list_max (struct list *list, list_less_func *less, void *aux)$/;"	f
list_min	kernel/list.c	/^list_min (struct list *list, list_less_func *less, void *aux)$/;"	f
list_next	kernel/list.c	/^list_next (struct list_elem *elem)$/;"	f
list_pop_back	kernel/list.c	/^list_pop_back (struct list *list)$/;"	f
list_pop_front	kernel/list.c	/^list_pop_front (struct list *list)$/;"	f
list_prev	kernel/list.c	/^list_prev (struct list_elem *elem)$/;"	f
list_push_back	kernel/list.c	/^list_push_back (struct list *list, struct list_elem *elem)$/;"	f
list_push_front	kernel/list.c	/^list_push_front (struct list *list, struct list_elem *elem)$/;"	f
list_rbegin	kernel/list.c	/^list_rbegin (struct list *list) $/;"	f
list_remove	kernel/list.c	/^list_remove (struct list_elem *elem)$/;"	f
list_rend	kernel/list.c	/^list_rend (struct list *list) $/;"	f
list_reverse	kernel/list.c	/^list_reverse (struct list *list)$/;"	f
list_size	kernel/list.c	/^list_size (struct list *list)$/;"	f
list_sort	kernel/list.c	/^list_sort (struct list *list, list_less_func *less, void *aux)$/;"	f
list_splice	kernel/list.c	/^list_splice (struct list_elem *before,$/;"	f
list_tail	kernel/list.c	/^list_tail (struct list *list) $/;"	f
list_unique	kernel/list.c	/^list_unique (struct list *list, struct list *duplicates,$/;"	f
lock	kernel/include/synch.h	/^struct lock $/;"	s
lock	kernel/mem/malloc.c	/^    struct lock lock;           \/* Lock. *\/$/;"	m	struct:desc	typeref:struct:desc::lock	file:
lock	kernel/mem/palloc.c	/^	struct lock lock;  $/;"	m	struct:pool	typeref:struct:pool::lock	file:
lock_acquire	kernel/synch.c	/^void lock_acquire (struct lock *lock)$/;"	f
lock_held_by_current_thread	kernel/synch.c	/^bool lock_held_by_current_thread (const struct lock *lock) $/;"	f
lock_init	kernel/synch.c	/^void lock_init (struct lock *lock)$/;"	f
lock_pid_simple	kernel/proc/proc.c	/^static int lock_pid_simple; $/;"	v	file:
lock_release	kernel/synch.c	/^void lock_release (struct lock *lock) $/;"	f
lock_try_acquire	kernel/synch.c	/^bool lock_try_acquire (struct lock *lock)$/;"	f
magic	kernel/mem/malloc.c	/^    unsigned magic;             \/* Always set to ARENA_MAGIC. *\/$/;"	m	struct:arena	file:
main_init	kernel/arch/Main.c	/^void main_init(void)$/;"	f
main_init	kernel/build/Main.s	/^main_init:$/;"	l
malloc	kernel/mem/malloc.c	/^malloc (size_t size) $/;"	f
malloc_init	kernel/mem/malloc.c	/^malloc_init (void) $/;"	f
mem	kernel/Makefile	/^mem = .\/mem$/;"	m
mem_pool	kernel/mem/palloc.c	/^static struct pool mem_pool;$/;"	v	typeref:struct:pool	file:
mem_size	kernel/mem/mm.c	/^unsigned long mem_size()$/;"	f
member	kernel/include/proc/proc.h	/^	unsigned member;$/;"	m	struct:process
memchr	kernel/string.c	/^memchr (const void *block_, int ch_, size_t size) $/;"	f
memcmp	kernel/string.c	/^memcmp (const void *a_, const void *b_, size_t size) $/;"	f
memcpy	kernel/string.c	/^memcpy (void *dst_, const void *src_, size_t size) $/;"	f
memcpy_hard	kernel/mem/paging.c	/^void memcpy_hard(void* from, void* to, uint32_t len)$/;"	f
memmove	kernel/string.c	/^memmove (void *dst_, const void *src_, size_t size) $/;"	f
memset	kernel/string.c	/^memset (void *dst_, int value, size_t size) $/;"	f
more_prio	kernel/proc/proc.c	/^bool more_prio(const struct list_elem *a, const struct list_elem *b,void *aux)$/;"	f
msgPMode	boot/i386/boot1.asm	/^msgPMode db "Protected Mode", 0$/;"	d
msgRMode	boot/i386/boot1.asm	/^msgRMode db "Real Mode", 0$/;"	d
nGetMemSize	kernel/mem/mm.c	/^unsigned long nGetMemSize()$/;"	f
name	kernel/device/block.c	/^    char name[16];                      \/* Block device name. *\/$/;"	m	struct:block	file:
next	kernel/include/list.h	/^    struct list_elem *next;     \/* Next list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem::list_elem
next_line	kernel/device/console.c	/^char next_line[2]; $/;"	v
nice	kernel/include/proc/proc.h	/^	unsigned char nice;		$/;"	m	struct:process
nice	kernel/include/proc/proc.h	/^	unsigned char nice; $/;"	m	struct:proc_option
number	kernel/vsprintk.c	/^static char *number(char * str, int num, int base, int size, int precision, int type)$/;"	f	file:
offsetof	kernel/include/ssulib.h	5;"	d
offsetof	kernel/include/stddef.h	4;"	d
old_proc	kernel/include/proc/proc.h	/^	bool old_proc;$/;"	m	struct:process
ops	kernel/device/block.c	/^    const struct block_operations *ops;  \/* Driver operations. *\/$/;"	m	struct:block	typeref:struct:block::block_operations	file:
org	boot/i386/boot1.asm	/^org	0x9000$/;"	l
org	boot/i386/bootloader.asm	/^org	0x7c00   $/;"	l
outb	kernel/arch/i386/io.asm	/^outb:  $/;"	l
outl	kernel/arch/i386/io.asm	/^outl:$/;"	l
outsw	kernel/include/device/io.h	/^outsw (uint16_t port, const void *addr, size_t cnt)$/;"	f
p_state	kernel/include/proc/proc.h	/^enum p_state {$/;"	g
palloc_free_multiple	kernel/mem/palloc.c	/^void palloc_free_multiple (void *pages, size_t page_cnt) $/;"	f
palloc_free_page	kernel/mem/palloc.c	/^void palloc_free_page (void *page) $/;"	f
palloc_get_multiple	kernel/mem/palloc.c	/^uint32_t * palloc_get_multiple (size_t page_cnt)$/;"	f
palloc_get_page	kernel/mem/palloc.c	/^uint32_t * palloc_get_page (void) $/;"	f
parent	kernel/include/proc/proc.h	/^	struct process* parent;$/;"	m	struct:process	typeref:struct:process::process
partition	kernel/device/partition.c	/^struct partition$/;"	s	file:
partition_operations	kernel/device/partition.c	/^static struct block_operations partition_operations =$/;"	v	typeref:struct:block_operations	file:
partition_operations	kernel/device/partition.c	/^static struct block_operations partition_operations;$/;"	v	typeref:struct:block_operations	file:
partition_read	kernel/device/partition.c	/^partition_read (void *p_, block_sector_t sector, void *buffer)$/;"	f	file:
partition_scan	kernel/device/partition.c	/^partition_scan (struct block *block)$/;"	f
partition_type_name	kernel/device/partition.c	/^partition_type_name (uint8_t type)$/;"	f	file:
partition_write	kernel/device/partition.c	/^partition_write (void *p_, block_sector_t sector, const void *buffer)$/;"	f	file:
pd	kernel/include/proc/proc.h	/^	void *pd;	$/;"	m	struct:process
pd_copy	kernel/mem/paging.c	/^void pd_copy(uint32_t* from, uint32_t* to, uint32_t* start, uint32_t* end, bool share)$/;"	f
pd_create	kernel/mem/paging.c	/^uint32_t* pd_create (pid_t pid)$/;"	f
pde_idx_addr	kernel/mem/paging.c	/^uint32_t pde_idx_addr(uint32_t* addr)$/;"	f
pf_handler	kernel/mem/paging.c	/^intr_handler_func pf_handler;$/;"	v
pf_handler	kernel/mem/paging.c	/^void pf_handler(struct intr_frame *iframe)$/;"	f
pg_addr	kernel/mem/paging.c	/^uint32_t* pg_addr(uint32_t* addr)$/;"	f
pg_no	kernel/include/mem/paging.h	/^static inline uint32_t pg_no(const uint32_t *page){$/;"	f
pg_no	kernel/include/vaddr.h	/^static inline uintptr_t pg_no (const void *va) {$/;"	f
pg_ofs	kernel/include/vaddr.h	/^static inline unsigned pg_ofs (const void *va) {$/;"	f
pg_round_down	kernel/include/vaddr.h	/^static inline void *pg_round_down (const void *va) {$/;"	f
pg_round_up	kernel/include/vaddr.h	/^static inline void *pg_round_up (const void *va) {$/;"	f
pid	kernel/include/proc/proc.h	/^	pid_t pid;	$/;"	m	struct:process
pid_num_max	kernel/proc/proc.c	/^int pid_num_max;$/;"	v
pid_t	kernel/include/proc/proc.h	/^typedef int pid_t;$/;"	t
plist	kernel/proc/proc.c	/^struct list plist;				$/;"	v	typeref:struct:list
pool	kernel/mem/palloc.c	/^struct pool$/;"	s	file:
pop	boot/i386/boot1.asm	/^		pop		ds$/;"	d
prev	kernel/include/list.h	/^    struct list_elem *prev;     \/* Previous list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem::list_elem
printCharToSerial	kernel/device/console.c	/^void printCharToSerial(const char *pString)$/;"	f
print_contributors	kernel/arch/Main.c	/^void print_contributors(void)$/;"	f
print_contributors	kernel/build/Main.s	/^print_contributors:$/;"	l
print_pid	kernel/include/proc/proc.h	/^proc_func print_pid;	$/;"	v
printk	kernel/device/console.c	/^int printk(const char *fmt, ...)$/;"	f
priority	kernel/include/proc/proc.h	/^	unsigned char priority;		$/;"	m	struct:process
proc	kernel/Makefile	/^proc = .\/proc$/;"	m
proc_block	kernel/proc/proc.c	/^void proc_block(void) \/\/io $/;"	f
proc_create	kernel/proc/proc.c	/^pid_t proc_create(proc_func func, struct proc_option *opt, void* aux)$/;"	f
proc_end	kernel/proc/proc.c	/^void proc_end(void)$/;"	f
proc_free	kernel/proc/proc.c	/^void proc_free(void)$/;"	f
proc_func	kernel/include/proc/proc.h	/^typedef void proc_func(void* aux);$/;"	t
proc_option	kernel/include/proc/proc.h	/^struct proc_option$/;"	s
proc_print_data	kernel/proc/proc.c	/^void proc_print_data()$/;"	f
proc_que_leveldown	kernel/proc/sched.c	/^void proc_que_leveldown(struct process *cur)$/;"	f
proc_que_levelup	kernel/proc/sched.c	/^void proc_que_levelup(struct process *cur)$/;"	f
proc_sleep	kernel/proc/proc.c	/^void proc_sleep(unsigned ticks)$/;"	f
proc_start	kernel/proc/proc.c	/^void  proc_start(void)$/;"	f
proc_ticks	kernel/arch/interrupt.c	/^unsigned long proc_ticks;$/;"	v
proc_unblock	kernel/proc/proc.c	/^void proc_unblock(struct process* proc)$/;"	f
proc_wake	kernel/proc/proc.c	/^void proc_wake(void)$/;"	f
process	kernel/include/proc/proc.h	/^struct process$/;"	s
process_stack_ofs	kernel/proc/proc.c	/^uint32_t process_stack_ofs; $/;"	v
procs	kernel/proc/proc.c	/^struct process procs[PROC_NUM_MAX]; $/;"	v	typeref:struct:process
pt_addr	kernel/mem/paging.c	/^uint32_t* pt_addr(uint32_t* addr)$/;"	f
pt_copy	kernel/mem/paging.c	/^uint32_t pt_copy(uint32_t *pd, uint32_t *dest_pd, uint32_t idx, uint32_t* start, uint32_t* end, bool share)$/;"	f
pt_pde	kernel/mem/paging.c	/^uint32_t* pt_pde(uint32_t pde)$/;"	f
pte_idx_addr	kernel/mem/paging.c	/^uint32_t pte_idx_addr(uint32_t* addr)$/;"	f
ptov	kernel/include/vaddr.h	/^ptov (uintptr_t paddr)$/;"	f
ptrdiff_t	kernel/include/stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t
push	boot/i386/boot1.asm	/^		push	ds$/;"	d
que_level	kernel/include/proc/proc.h	/^	int que_level; \/\/(0,1,2) queue level$/;"	m	struct:process
qword	kernel/include/type.h	/^typedef long long qword;$/;"	t
read	kernel/include/device/block.h	/^    void (*read) (void *aux, block_sector_t, void *buffer);$/;"	m	struct:block_operations
read_cnt	kernel/device/block.c	/^    unsigned long long read_cnt;        \/* Number of sectors read. *\/$/;"	m	struct:block	file:
read_cr0	kernel/arch/i386/crset.asm	/^read_cr0:$/;"	l
read_cr3	kernel/arch/i386/crset.asm	/^read_cr3:$/;"	l
read_partition_table	kernel/device/partition.c	/^read_partition_table (struct block *block, block_sector_t sector,$/;"	f	file:
realloc	kernel/mem/malloc.c	/^realloc (void *old_block, size_t new_size) $/;"	f
refreshScreen	kernel/device/console.c	/^void refreshScreen(void)$/;"	f
reg_handler	kernel/arch/interrupt.c	/^void reg_handler(unsigned short idx, intr_handler_func *handler) $/;"	f
rt_priority	kernel/include/proc/proc.h	/^	unsigned char rt_priority;	$/;"	m	struct:process
rt_priority	kernel/include/proc/proc.h	/^	unsigned char rt_priority;$/;"	m	struct:proc_option
scale_down	kernel/mem/paging.c	/^uint32_t scale_down(uint32_t base, uint32_t size)$/;"	f
scale_up	kernel/mem/paging.c	/^uint32_t scale_up(uint32_t base, uint32_t size)$/;"	f
sched_find_que	kernel/proc/sched.c	/^struct process* sched_find_que(void) {$/;"	f
sched_on_return	kernel/arch/interrupt.c	/^bool sched_on_return;$/;"	v
schedule	kernel/proc/sched.c	/^void schedule(void)$/;"	f
scheduling	kernel/proc/sched.c	/^int scheduling;$/;"	v
scr_end	kernel/device/console.c	/^char* scr_end;$/;"	v
scroll	kernel/device/console.c	/^void scroll(void) $/;"	f
scroll_screen	kernel/device/console.c	/^void scroll_screen(int offset)$/;"	f
sema_down	kernel/synch.c	/^void sema_down (struct semaphore *sema) $/;"	f
sema_init	kernel/synch.c	/^void sema_init(struct semaphore *sema, unsigned value)$/;"	f
sema_self_test	kernel/synch.c	/^void sema_self_test (void) $/;"	f
sema_test_helper	kernel/synch.c	/^static void sema_test_helper (void *sema_) $/;"	f	file:
sema_try_down	kernel/synch.c	/^bool sema_try_down (struct semaphore *sema) $/;"	f
sema_up	kernel/synch.c	/^void sema_up (struct semaphore *sema) $/;"	f
semaphore	kernel/include/synch.h	/^      struct semaphore semaphore; $/;"	m	struct:lock	typeref:struct:lock::semaphore
semaphore	kernel/include/synch.h	/^struct semaphore $/;"	s
set_fallow	kernel/device/console.c	/^void set_fallow(void)$/;"	f
shutdown	kernel/arch/syscall.c	/^void shutdown(void)$/;"	f
simple_lock	kernel/include/proc/proc.h	/^	int simple_lock;	$/;"	m	struct:process
size	kernel/device/block.c	/^    block_sector_t size;                 \/* Size in sectors. *\/$/;"	m	struct:block	file:
size_t	kernel/include/stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
size_t	kernel/include/type.h	/^typedef unsigned size_t;$/;"	t
skip_atoi	kernel/vsprintk.c	/^static int skip_atoi(const char **s)$/;"	f	file:
slist	kernel/proc/proc.c	/^struct list slist;				$/;"	v	typeref:struct:list
ss	kernel/include/interrupt.h	/^	uint16_t ss, :16; $/;"	m	struct:intr_frame
ssuos_main	kernel/arch/Main.c	/^void ssuos_main(void)$/;"	f
ssuos_main	kernel/build/Main.s	/^ssuos_main:$/;"	l
ssuread	kernel/arch/syscall.c	/^int ssuread()$/;"	f
stack	kernel/include/proc/proc.h	/^	void *stack;	$/;"	m	struct:process
start	kernel/device/partition.c	/^    block_sector_t start;               \/* First sector within device. *\/$/;"	m	struct:partition	file:
state	kernel/include/proc/proc.h	/^	enum p_state state;$/;"	m	struct:process	typeref:enum:process::p_state
strcat	kernel/include/string.h	25;"	d
strchr	kernel/string.c	/^strchr (const char *string, int c_) $/;"	f
strcmp	kernel/string.c	/^strcmp (const char *a_, const char *b_) $/;"	f
strcpy	kernel/include/string.h	23;"	d
strcspn	kernel/string.c	/^strcspn (const char *string, const char *stop) $/;"	f
strlcat	kernel/string.c	/^strlcat (char *dst, const char *src, size_t size) $/;"	f
strlcpy	kernel/string.c	/^strlcpy (char *dst, const char *src, size_t size) $/;"	f
strlen	kernel/vsprintk.c	/^int strlen(const char *string)$/;"	f
strncat	kernel/include/string.h	26;"	d
strncmp	kernel/ssulib.c	/^int strncmp(char* b1, char* b2, int len)$/;"	f
strncpy	kernel/include/string.h	24;"	d
strnlen	kernel/string.c	/^strnlen (const char *string, size_t maxlen) $/;"	f
strpbrk	kernel/string.c	/^strpbrk (const char *string, const char *stop) $/;"	f
strrchr	kernel/string.c	/^strrchr (const char *string, int c_) $/;"	f
strspn	kernel/string.c	/^strspn (const char *string, const char *skip) $/;"	f
strstr	kernel/string.c	/^strstr (const char *haystack, const char *needle) $/;"	f
strtok	kernel/include/string.h	27;"	d
strtok_r	kernel/string.c	/^strtok_r (char *s, const char *delimiters, char **save_ptr) $/;"	f
swap	kernel/list.c	/^swap (struct list_elem **a, struct list_elem **b) $/;"	f	file:
switch_process	kernel/arch/i386/switch.S	/^switch_process:$/;"	l
syscall0	kernel/arch/syscall.c	6;"	d	file:
syscall1	kernel/arch/syscall.c	18;"	d	file:
syscall2	kernel/arch/syscall.c	32;"	d	file:
syscall3	kernel/arch/syscall.c	48;"	d	file:
syscall_handler	kernel/arch/interrupt.c	/^void syscall_handler(struct intr_frame *iframe)$/;"	f
syscall_tbl	kernel/arch/syscall.c	/^int syscall_tbl[SYS_NUM][2];$/;"	v
tail	kernel/include/list.h	/^    struct list_elem tail;      \/* List tail. *\/$/;"	m	struct:list	typeref:struct:list::list_elem
ticks	kernel/arch/interrupt.c	/^static unsigned long ticks;$/;"	v	file:
time_sleep	kernel/include/proc/proc.h	/^	unsigned long long time_sleep;$/;"	m	struct:process
time_slice	kernel/include/proc/proc.h	/^	unsigned time_slice;	$/;"	m	struct:process
time_used	kernel/include/proc/proc.h	/^	unsigned long long time_used;	$/;"	m	struct:process
timer_handler	kernel/arch/interrupt.c	/^void timer_handler(struct intr_frame *iframe)$/;"	f
times	boot/i386/boot1.asm	/^times 	2048-($-$$) db 0x00$/;"	l
times	boot/i386/bootloader.asm	/^times 	510-($-$$) db 0x00$/;"	l
tolower	kernel/include/ctype.h	/^static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }$/;"	f
toupper	kernel/include/ctype.h	/^static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }$/;"	f
true	kernel/include/stdbool.h	5;"	d
true	kernel/include/type.h	19;"	d
type	kernel/device/block.c	/^    enum block_type type;                \/* Type of block device. *\/$/;"	m	struct:block	typeref:enum:block::block_type	file:
uint16_t	kernel/include/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t
uint16_t	kernel/include/type.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	kernel/include/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	kernel/include/type.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	kernel/include/stdint.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	kernel/include/type.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint8_t	kernel/include/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	kernel/include/type.h	/^typedef unsigned char uint8_t;$/;"	t
uintmax_t	kernel/include/stdint.h	/^typedef unsigned long long int uintmax_t;$/;"	t
uintmax_t	kernel/include/type.h	/^typedef unsigned long long int uintmax_t;$/;"	t
uintptr_t	kernel/include/stdint.h	/^typedef uint32_t uintptr_t;$/;"	t
uintptr_t	kernel/include/type.h	/^typedef uint32_t uintptr_t;$/;"	t
used_map	kernel/mem/palloc.c	/^	struct bitmap *used_map; $/;"	m	struct:pool	typeref:struct:pool::bitmap	file:
va_arg	kernel/include/stdarg.h	10;"	d
va_end	kernel/include/stdarg.h	11;"	d
va_list	kernel/include/stdarg.h	/^typedef char			*va_list;$/;"	t
va_start	kernel/include/stdarg.h	9;"	d
value	kernel/include/synch.h	/^      unsigned value;$/;"	m	struct:semaphore
vec_no	kernel/include/interrupt.h	/^	uint32_t vec_no;$/;"	m	struct:intr_frame
vsprintk	kernel/vsprintk.c	/^int vsprintk(char *buf, const char *fmt, va_list args)$/;"	f
vtop	kernel/include/vaddr.h	/^vtop (const void *vaddr)$/;"	f
wait	kernel/arch/syscall.c	/^pid_t wait(int *status)$/;"	f
waiters	kernel/include/synch.h	/^      struct list waiters; $/;"	m	struct:condition	typeref:struct:condition::list
waiters	kernel/include/synch.h	/^      struct list waiters;$/;"	m	struct:semaphore	typeref:struct:semaphore::list
write	kernel/include/device/block.h	/^    void (*write) (void *aux, block_sector_t, const void *buffer);$/;"	m	struct:block_operations
write_cnt	kernel/device/block.c	/^    unsigned long long write_cnt;       \/* Number of sectors written. *\/$/;"	m	struct:block	file:
write_cr0	kernel/arch/i386/crset.asm	/^write_cr0:$/;"	l
write_cr3	kernel/arch/i386/crset.asm	/^write_cr3:$/;"	l
zero	kernel/arch/i386/intr-stubs.S	/^#define zero                                \\$/;"	d
